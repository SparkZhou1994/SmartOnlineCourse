<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="spark.smartonlinecourse.dao.SignMapper" >
    <resultMap id="SignResultMap" type="spark.smartonlinecourse.entity.Sign" >
        <id column="sign_id" property="signId" jdbcType="INTEGER" />
        <result column="choose_course_id" property="chooseCourseId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="batch" property="batch" jdbcType="INTEGER" />
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="sign_time" property="signTime" jdbcType="TIMESTAMP" />
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="range" property="range" jdbcType="CHAR"/>
    </resultMap>

    <sql id="Sign_Column_List" >
        sign_id,sign.choose_course_id,user_name,batch,`code`,sign_time,end_time,`range`
    </sql>

    <select id="selectBatchByCourseId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select MAX(batch) from sign join choose_course on sign.choose_course_id=choose_course.choose_course_id
        where course_id=#{courseId,javaType=java.lang.Integer,jdbcType=INTEGER}
    </select>

    <insert id="insertSign" parameterType="spark.smartonlinecourse.entity.Sign">
        insert into sign(choose_course_id,batch,code,end_time) values(#{chooseCourseId},#{batch},#{code},#{endTime,jdbcType=TIMESTAMP,javaType=java.time.LocalDateTime})
    </insert>

    <update id="updateSign" parameterType="spark.smartonlinecourse.entity.Sign">
        update sign set sign_time=#{signTime,jdbcType=TIMESTAMP,javaType=java.time.LocalDateTime},
        range=#{range,jdbcType=CHAR,javaType=java.lang.Character}
        where sign_id=#{sign_id,jdbcType=INTEGER,javaType=java.lang.Integer}
    </update>

    <select id="selectSignByChooseCourseIdAndBatch" parameterType="spark.smartonlinecourse.entity.Key" resultType="spark.smartonlinecourse.entity.Sign">
        select
        <include refid="Sign_Column_List"/>
        from sign
        join choose_course on choose_course.chooose_course_id=sign.choose_course_id
        join `user` on `user`.user_id=choose_course.user_id
        <where>
            <if test="chooseCourseId != null and chooseCourseId != ''">
                and sign.choose_course_id=#{chooseCourseId}
            </if>
            <if test="batch != null and batch != ''">
                and batch=#{batch}
            </if>
        </where>
    </select>

    <select id="selectSignByCourseIdAndUserIdAndStartAndRow" parameterType="spark.smartonlinecourse.entity.Key" resultMap="SignResultMap">
        select
        <include refid="Sign_Column_List"/>
        from sign
        join choose_course on choose_course.choose_course_id = sign.choose_course_id
        join `user` on `user`.user_id=choose_course.user_id
        <where>
            course_id=#{courseId}
            <if test="userId != null and userId != ''">
                and choose_course.user_id=#{userId}
            </if>
        </where>
        order by batch desc
        limit #{start},#{row}
    </select>
    
    <select id="selectCountByCourseIdAndUserId" parameterType="spark.smartonlinecourse.entity.Key" resultType="java.lang.Integer">
        select count(*) from sign
        join choose_course on choose_course.choose_course_id = sign.choose_course_id
        <where>
            course_id=#{courseId}
            <if test="userId != null and userId != ''">
                and user_id=#{userId}
            </if>
        </where>
    </select>
</mapper>