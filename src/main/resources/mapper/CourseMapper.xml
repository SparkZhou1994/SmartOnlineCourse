<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="spark.smartonlinecourse.dao.CourseMapper" >
    <resultMap id="CourseResultMap" type="spark.smartonlinecourse.entity.Course" >
        <id column="course_id" property="courseId" jdbcType="INTEGER" />
        <result column="course_name" property="courseName" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="catalog" property="catalog" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Course_Column_List" >
    course.course_id as course_id, course_name, user_name, `catalog`, course.avatar
    </sql>
    <select id="selectTop" resultMap="CourseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Course_Column_List"/>
        from course,`user`
        where course.user_id=`user`.user_id limit #{start,jdbcType=INTEGER},4
    </select>
    <insert id="insertCourse" parameterType="spark.smartonlinecourse.entity.Course" useGeneratedKeys="true" keyProperty="courseId"
            keyColumn="course_id" >
        <if test="avatar !=null and avatar !=''">
            insert into course(course_name,user_id,`catalog`,avatar)
            values(#{courseName},#{userId},#{catalog},#{avatar})
        </if>
        <if test="avatar ==null or avatar==''">
            insert into course(course_name,user_id,`catalog`)
            values(#{courseName},#{userId},#{catalog})
        </if>
    </insert>
    <select id="selectCourseByCourseId" parameterType="java.lang.Integer" resultMap="CourseResultMap">
        select
        <include refid="Course_Column_List"/>
        from course
        join `user` on course.user_id = `user`.user_id
        where course_id=#{courseId}
    </select>
    <select id="selectBatchByCourseId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select MAX(batch) from sign join choose_course on sign.choose_course_id=choose_course.choose_course_id
        where course_id=#{courseId,javaType=java.lang.Integer,jdbcType=INTEGER}
    </select>
</mapper>